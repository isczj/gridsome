{"remainingRequest":"C:\\Users\\chengzhijin\\Desktop\\my-gridsome\\node_modules\\babel-loader\\lib\\index.js??ref--1-1!C:\\Users\\chengzhijin\\Desktop\\my-gridsome\\node_modules\\gridsome\\app\\entry.server.js","dependencies":[{"path":"C:\\Users\\chengzhijin\\Desktop\\my-gridsome\\node_modules\\gridsome\\app\\entry.server.js","mtime":1630390366112},{"path":"C:\\Users\\chengzhijin\\Desktop\\my-gridsome\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630390362902},{"path":"C:\\Users\\chengzhijin\\Desktop\\my-gridsome\\node_modules\\babel-loader\\lib\\index.js","mtime":1630390362515}],"contextDependencies":[],"result":["import \"C:\\\\Users\\\\chengzhijin\\\\Desktop\\\\my-gridsome\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"C:\\\\Users\\\\chengzhijin\\\\Desktop\\\\my-gridsome\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"C:\\\\Users\\\\chengzhijin\\\\Desktop\\\\my-gridsome\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"C:\\\\Users\\\\chengzhijin\\\\Desktop\\\\my-gridsome\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport createApp, { runMain } from './app';\nrunMain();\nvar startRoute = null;\nexport default (function (context) {\n  return new Promise(function (resolve, reject) {\n    var _createApp = createApp(),\n        app = _createApp.app,\n        router = _createApp.router;\n\n    var path = context.path,\n        location = context.location;\n    if (!startRoute) startRoute = router.history.current;else router.history.current = startRoute;\n    context.meta = app.$meta();\n    router.onError(function (err) {\n      return reject(err);\n    });\n    router.push(location, function () {\n      var matched = router.currentRoute.matched;\n\n      if (!matched.length || matched[0].name === '*') {\n        return reject(new Error(\"Could not resolve \".concat(path, \".\")));\n      }\n\n      router.history.errorCbs.pop();\n      resolve(app);\n    }, function (err) {\n      if (err) reject(err);else {\n        if (location.path === router.currentRoute.path) resolve(app);else reject(new Error(\"Route transition was aborted while generating HTML.\"));\n      }\n    });\n  });\n});",{"version":3,"sources":["C:/Users/chengzhijin/Desktop/my-gridsome/node_modules/gridsome/app/entry.server.js"],"names":["createApp","runMain","startRoute","context","Promise","resolve","reject","app","router","path","location","history","current","meta","$meta","onError","err","push","matched","currentRoute","length","name","Error","errorCbs","pop"],"mappings":";;;;;;AAAA,OAAOA,SAAP,IAAoBC,OAApB,QAAmC,OAAnC;AAEAA,OAAO;AAEP,IAAIC,UAAU,GAAG,IAAjB;AAEA,gBAAe,UAAAC,OAAO;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACzD,qBAAwBN,SAAS,EAAjC;AAAA,QAAQO,GAAR,cAAQA,GAAR;AAAA,QAAaC,MAAb,cAAaA,MAAb;;AACA,QAAQC,IAAR,GAA2BN,OAA3B,CAAQM,IAAR;AAAA,QAAcC,QAAd,GAA2BP,OAA3B,CAAcO,QAAd;AAEA,QAAI,CAACR,UAAL,EAAiBA,UAAU,GAAGM,MAAM,CAACG,OAAP,CAAeC,OAA5B,CAAjB,KACKJ,MAAM,CAACG,OAAP,CAAeC,OAAf,GAAyBV,UAAzB;AAELC,IAAAA,OAAO,CAACU,IAAR,GAAeN,GAAG,CAACO,KAAJ,EAAf;AAEAN,IAAAA,MAAM,CAACO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAIV,MAAM,CAACU,GAAD,CAAV;AAAA,KAAlB;AACAR,IAAAA,MAAM,CAACS,IAAP,CAAYP,QAAZ,EAAsB,YAAM;AAC1B,UAAwBQ,OAAxB,GAAqCV,MAArC,CAAQW,YAAR,CAAwBD,OAAxB;;AAEA,UAAI,CAACA,OAAO,CAACE,MAAT,IAAmBF,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAX,KAAoB,GAA3C,EAAgD;AAC9C,eAAOf,MAAM,CAAC,IAAIgB,KAAJ,6BAA+Bb,IAA/B,OAAD,CAAb;AACD;;AAEDD,MAAAA,MAAM,CAACG,OAAP,CAAeY,QAAf,CAAwBC,GAAxB;AACAnB,MAAAA,OAAO,CAACE,GAAD,CAAP;AACD,KATD,EASG,UAAAS,GAAG,EAAI;AACR,UAAIA,GAAJ,EAASV,MAAM,CAACU,GAAD,CAAN,CAAT,KACK;AACH,YAAIN,QAAQ,CAACD,IAAT,KAAkBD,MAAM,CAACW,YAAP,CAAoBV,IAA1C,EAAgDJ,OAAO,CAACE,GAAD,CAAP,CAAhD,KACKD,MAAM,CAAC,IAAIgB,KAAJ,uDAAD,CAAN;AACN;AACF,KAfD;AAgBD,GA1ByB,CAAJ;AAAA,CAAtB","sourcesContent":["import createApp, { runMain } from './app'\r\n\r\nrunMain()\r\n\r\nlet startRoute = null\r\n\r\nexport default context => new Promise((resolve, reject) => {\r\n  const { app, router } = createApp()\r\n  const { path, location } = context\r\n\r\n  if (!startRoute) startRoute = router.history.current\r\n  else router.history.current = startRoute\r\n\r\n  context.meta = app.$meta()\r\n\r\n  router.onError(err => reject(err))\r\n  router.push(location, () => {\r\n    const { currentRoute: { matched }} = router\r\n\r\n    if (!matched.length || matched[0].name === '*') {\r\n      return reject(new Error(`Could not resolve ${path}.`))\r\n    }\r\n\r\n    router.history.errorCbs.pop()\r\n    resolve(app)\r\n  }, err => {\r\n    if (err) reject(err)\r\n    else {\r\n      if (location.path === router.currentRoute.path) resolve(app)\r\n      else reject(new Error(`Route transition was aborted while generating HTML.`))\r\n    }\r\n  })\r\n})\r\n"]}]}